Перем ПометкаСохранить;

Процедура СформироватьНажатие(Элемент)
	СформироватьОтчет();
КонецПроцедуры

Процедура СохранитьОтчетНажатие(Элемент)
	НастройкаСохраненияОтчета();
КонецПроцедуры


Процедура СформироватьОтчет()
	
	Если НЕ КАРМАН_ОбщийМодуль.ПравоЕстьУПользователяДополнительное(ПолныйДоступКМагазинам) И НЕ РольДоступна("КАРМАН_РасчетЗП") И НЕ РольДоступна("ПолныеПрава") Тогда
		Для каждого Строка Из ВыбМагазин Цикл
			Если НЕ ЗначениеЗаполнено(Строка.Значение) Тогда
				Продолжить;				
			КонецЕсли;
			
			Если ДоступныеМагазины.НайтиПоЗначению(Строка.Значение) = Неопределено Тогда
				ОбщегоНазначения.ПоказатьПредупреждениеОбОшибке("Нет прав на запуск отчета по магазину """+Строка.Значение+"""!",,,15);
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыбМагазин) Тогда
		ОбщегоНазначения.ПоказатьПредупреждениеОбОшибке("Выберите магазин!",,,15);
	Иначе
		
		МенеджерВТ 	= Новый МенеджерВременныхТаблиц;
		Запрос 		= Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		
		ВремяНачОтчета = ТекущаяДата();
		СообщитьТекст("ОТЧЕТ НАЧАЛО: "+Формат(ВремяНачОтчета,"ДЛФ=В"));
		
		УстановитьПараметрыЗапроса(ВыбМагазин, ДатаНач, ДатаКон, Запрос);
		
		Если ВклОтладку И Отладка="Параметры расчета ЗП" Тогда
			Возврат;
		КонецЕсли;
		
		втОбщиеЗапросы(ВыбМагазинФильтр,ДатаНач,ДатаКон,Запрос);
		
		//Возврат;
		
		Если УдержаниеЗПЛП Тогда
			
			УдержанияЗПЛПП(НачалоДня(ДатаНач), КонецДня(ДатаКон), Запрос);
			
		Иначе
			
			СводныйОтчет = ПереключательОсновной = "Сводный";
			
			Если ПереключательОсновной = "Основной" Тогда  
				
				Отчет(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос);
				
				//ВЫВОД ОСНОВНОЙ
				ВыводОсновной(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
				Если ВыводТолькоОсновногоОтчета Тогда
					Возврат;
				КонецЕсли;
				
				//ВЫВОД ДЕТАЛИ
				ВыводДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДетали);
				
				//Вывод ЗП ЛП
				Если ВыводЗПЛПДеталиВОсновной Тогда
					ВыводЗПЛПДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗПЛП);
				Иначе
					ВыводЗПЛП(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗПЛП);
				КонецЕсли;
				
				
				//ВЫВОД С оборота
				ВыводСОборота(Запрос,ЭлементыФормы.ПолеТабличногоДокументаСОборота);
				
				//ВЫВОД ЗП за выход
				ВыводЗПЗаВыходДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗаВыход);
				
				//ВЫВОД Качелей
				ВыводКачелей(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКачели);
				
				//ВЫВОД Месячная премия
				ВыводМесПремия(Запрос,ЭлементыФормы.ПолеТабличногоДокументаМесПремия);
				
				//ВЫВОД Для перечислений
				ВыводДляПеречислений(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДляПеречислений);
				
				//ВЫВОД КП
				ВыводКП(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКП);
				
				ВыводКП(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКП,"Качели");
				
				//ВЫВОД Стажеры с наставниками
				ВыводСтажерыСНаставником(Запрос,ЭлементыФормы.ПолеТабличногоДокументаСтажеры);
				
				//ВЫВОД Штрафы и удержания
				ВыводШтрафыУдержания(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДоплатыИУдержания);
				
				////ВЫВОД Не учтенные удержания
				//ВыводНеУчтенныеУдержания2(Запрос,ЭлементыФормы.ПолеТабличногоДокументаНеУчтенныеУдержания);	
				
				////ВЫВОД Не учтенные начисления
				//ВыводНеУчтенныеНачисления2(Запрос,ЭлементыФормы.ПолеТабличногоДокументаНеУчтенныеНачисления);
				
				//ВЫВОД Индивидуальных премий
				ВыводИндивидПремияВсе(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДопМотивация);
				
				//ВЫВОД Бонусных дней
				ВыводБонусныеДни(Запрос,ЭлементыФормы.ПолеТабличногоДокументаБонусныеДни);
				
				ВыводПланТГВДеньгах(Запрос,ЭлементыФормы.ПолеТабличногоДокументаПланТГ);

				
				//ВЫВОД Сетки ДЧ, за выход
				ВыводСетки(Запрос,ЭлементыФормы.ПолеТабличногоДокументаСеткаДЧ);
								
				ВыводВТ(тзОбщиеПродажи,"ОбщиеПродажи",ЭлементыФормы.ПолеТабличногоДокументаОбщиеПродажи);
							
				ВыводВТ(тзСтавкиЗаВыход,"СтавкиЗаВыход",ЭлементыФормы.ПолеТабличногоДокументаСтавкиЗаВыход);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "ЗП ЛП" Тогда 
				
				//ЗП ЗА ВЫХОД Для спецмотивации 
				//Для продавцов в 1-й и 2-й категории (без учета льготных категорий) устанавливается доплата +25% к ЗП ЛП
				Если РасчетКатВЗПЛП Тогда
					ЗПЗаВыход(ВыбМагазин, ВыбСотрудник, ДатаНач, КонецДня(ДатаКон), Запрос);
				Иначе
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	NULL КАК Период,
					|	NULL КАК Сотрудник,
					|	NULL КАК Должность,
					|	NULL КАК Магазин,
					|	NULL КАК ВидЛьготыКат,
					|	NULL КАК КатБезЛьгот,
					|	NULL КАК Кат
					|ПОМЕСТИТЬ МагСотрСтЗаВыходДетали";
					Результат = Запрос.Выполнить();
				КонецЕсли;
				
				ЗПЛП(ВыбМагазин, ВыбСотрудник, ДатаНач, ДатаКон, Запрос);
				
				//Вывод ЗП ЛП
				ВыводЗПЛП(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
				//Детали ЗП ЛП
				ВыводЗПЛПДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДетали);
				
				Если ВыводТолькоОсновногоОтчета Тогда
					Возврат;
				КонецЕсли;
				
				//ВЫВОД Бонусных дней
				ВыводБонусныеДни(Запрос,ЭлементыФормы.ПолеТабличногоДокументаБонусныеДни);
				
				//ВЫВОД Сетки ДЧ, за выход
				ВыводСетки(Запрос,ЭлементыФормы.ПолеТабличногоДокументаСеткаДЧ);
				
				ВыводВТ(тзОбщиеПродажи,"ОбщиеПродажи",ЭлементыФормы.ПолеТабличногоДокументаОбщиеПродажи);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "ЗП ТМ" Тогда 
				
				//ЗП ЗА ВЫХОД Для спецмотивации 
				//Для продавцов в 1-й и 2-й категории (без учета льготных категорий) устанавливается доплата +25% к ЗП ЛП
				Если РасчетКатВЗПЛП Тогда
					ЗПЗаВыход(ВыбМагазин, ВыбСотрудник, ДатаНач, КонецДня(ДатаКон), Запрос);
				Иначе
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	NULL КАК Период,
					|	NULL КАК Сотрудник,
					|	NULL КАК Должность,
					|	NULL КАК Магазин,
					|	NULL КАК ВидЛьготыКат,
					|	NULL КАК КатБезЛьгот,
					|	NULL КАК Кат
					|ПОМЕСТИТЬ МагСотрСтЗаВыходДетали";
					Результат = Запрос.Выполнить();
				КонецЕсли;

				ЗПЛПТМ(ВыбМагазин, ДатаНач, ДатаКон, Запрос);
				
				//Детали ЗП ЛП ТМ
				ВыводЗПЛПДеталиТМ(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
				////Вывод ЗП ЛП
				//ВыводЗПЛП(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "За выход" Тогда 
				
				ЗПЗаВыход(ВыбМагазин, ВыбСотрудник, ДатаНач, КонецДня(ДатаКон), Запрос);
				
				//ВЫВОД ЗП за выход ДЕТАЛИ
				ВыводЗПЗаВыходДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДетали);
				
				//ВЫВОД ЗП за выход
				ВыводЗПЗаВыход(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
				Если ВыводТолькоОсновногоОтчета Тогда
					Возврат;
				КонецЕсли;
				
				//ВЫВОД План на смену
				Если РасчетПланЛППоТоргВремени Тогда
					ВыводПланЛП(Запрос, ЭлементыФормы.ПолеТабличногоДокументаЗаВыход);
				Иначе
					ВыводПланНаСмену(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗаВыход);
				КонецЕсли;

				//ВЫВОД Качелей
				ВыводКачелей(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКачели);
				
				//ВЫВОД Бонусных дней
				ВыводБонусныеДни(Запрос,ЭлементыФормы.ПолеТабличногоДокументаБонусныеДни);
				
				//ВЫВОД Сетки ДЧ, за выход
				ВыводСетки(Запрос,ЭлементыФормы.ПолеТабличногоДокументаСеткаДЧ);
				
				ВыводВТ(тзСтавкиЗаВыход,"СтавкиЗаВыход",ЭлементыФормы.ПолеТабличногоДокументаСтавкиЗаВыход);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "С оборота" Тогда 
				
				ЗПсОборота(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос);
				
				//ВЫВОД С оборота
				ВыводСОборота(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
				//ВЫВОД С оборота детали
				ВыводСОборотаДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДетали);
				
				//ВЫВОД Бонусных дней
				ВыводБонусныеДни(Запрос,ЭлементыФормы.ПолеТабличногоДокументаБонусныеДни);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "Мес премия" Тогда 
				
				МесПремия(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос);
				
				//ВЫВОД Месячная премия
				ВыводМесПремия(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "Доп премия" Тогда 
				
				ДопПремияКП(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос);	
				
				//ВЫВОД КП
				ВыводКП(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
				ВыводКП(Запрос,ЭлементыФормы.ПолеТабличногоДокумента,"Качели");
				
				Если ВыводТолькоОсновногоОтчета Тогда
					Возврат;
				КонецЕсли;
				
				//ВЫВОД Детали ЗП ЛП
				ВыводЗПЛПДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗПЛП);
				
				//ВЫВОД Индивидуальных премий
				ВыводИндивидПремияВсе(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДопМотивация);
				
				ПланТГВДеньгах(ДатаНач,ДатаКон,Запрос);
				ВыводПланТГВДеньгах(Запрос,ЭлементыФормы.ПолеТабличногоДокументаПланТГ);
				
				//ВЫВОД Качелей
				ВыводКачелей(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКачели);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "План" Тогда 
				
				ПланНаСмену(ВыбМагазин, ДатаНач, ДатаКон, Запрос);
				
				
				//ВЫВОД План на смену
				ВыводПланНаСмену(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
				//ВЫВОД Качелей
				ВыводКачелей(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКачели);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "План ЛП" Тогда 
				
				ПланЛП(Запрос);
				
				ВыводПланЛП(Запрос, ЭлементыФормы.ПолеТабличногоДокумента);
				
				
			КонецЕсли;
			
			Если ПереключательОсновной = "По дням" Тогда 
				
				ЗППоДням(ВыбМагазин,ВыбСотрудник,ДатаНач,ДатаКон,Запрос);	
				
				//ВЫВОД ЗП за выход
				ВыводЗППоДнямДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
				Если ВыводТолькоОсновногоОтчета Тогда
					Возврат;
				КонецЕсли;
				
				//ВЫВОД Детали ЗП ЛП
				ВыводЗПЛПДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗПЛП);
				
				//ВЫВОД С оборота
				ВыводСОборота(Запрос,ЭлементыФормы.ПолеТабличногоДокументаСОборота);
				
				//ВЫВОД ЗП за выход
				ВыводЗПЗаВыходДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗаВыход);
				
				ВыводПланТГВДеньгах(Запрос,ЭлементыФормы.ПолеТабличногоДокументаПланТГ);
				
				//ВЫВОД КП
				ВыводКП(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКП);
				
				ВыводКП(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКП,"Качели");
				
				ВыводВТ(тзОбщиеПродажи,"ОбщиеПродажи",ЭлементыФормы.ПолеТабличногоДокументаОбщиеПродажи);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "По чекам" Тогда 
				
				ПоЧекам(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос );
				
				//ВЫВОД По чекам
				ВыводПоЧекам(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "Лояльность" Тогда 
				
				Лояльность(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос);
								
				//ЛОЯЛЬНОСТЬ ВЫВОД
				ВыводЛояльность(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);	
				
				Если ВыводТолькоОсновногоОтчета Тогда
					Возврат;
				КонецЕсли;
				
				//ИСТОРИЯ ЛОЯЛЬНОСТИ
				ВыводИсторияЛояльности(Запрос,ЭлементыФормы.ПолеТабличногоДокументаИсторияЛояльности);	
				
			КонецЕсли;
			
			Если ПереключательОсновной = "ФОТ" ИЛИ ПереключательОсновной = "Сводный" Тогда 
				
				ФОТ(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос, СводныйОтчет);
				
				Если СводныйОтчет Тогда
					Сводный(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос);
					ВыводСводный(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);	
				Иначе
					//ФОТ ВЫВОД
					ВыводФОТ(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);	
				КонецЕсли;
				
				Если ВыводТолькоОсновногоОтчета ИЛИ ИСТИНА Тогда
					Возврат;
				КонецЕсли;
				
				//ВЫВОД ОСНОВНОЙ
				ВыводОсновной(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДетали);
				
				//ВЫВОД Детали ЗП ЛП
				ВыводЗПЛПДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗПЛП);
				
				//ВЫВОД С оборота
				ВыводСОборота(Запрос,ЭлементыФормы.ПолеТабличногоДокументаСОборота);
				
				//ВЫВОД ЗП за выход ДЕТАЛИ
				ВыводЗПЗаВыходДетали(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗаВыход);
				
				////ВЫВОД ЗП за выход
				//ВыводЗПЗаВыход(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗаВыход);
				
				//ВЫВОД Качелей
				ВыводКачелей(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКачели);
				
				//ВЫВОД Месячная премия
				ВыводМесПремия(Запрос,ЭлементыФормы.ПолеТабличногоДокументаМесПремия);
				
				//ВЫВОД КП
				ВыводКП(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКП);
				
				ВыводКП(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКП,"Качели");
				
				////ВЫВОД Штрафы и удержания
				//ВыводШтрафыУдержания(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДоплатыИУдержания);
				
				//ВЫВОД Начисления и удержания
				ВыводВТ(тзНачисленияИУдержания,"НачисленияИУдержания",ЭлементыФормы.ПолеТабличногоДокументаДоплатыИУдержания);
				
				//ВЫВОД Индивидуальных премий
				ВыводИндивидПремияВсе(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДопМотивация);
				
				//ВЫВОД Бонусных дней
				ВыводБонусныеДни(Запрос,ЭлементыФормы.ПолеТабличногоДокументаБонусныеДни);
				
			КонецЕсли;
			
			Если ПереключательОсновной = "Отпуск" Тогда 
				
				Если ДатаНач >= Дата(2012,09,01) Тогда
					РасчетОтпуска2(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос);
					ВыводОтпуска1(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				Иначе
					РасчетОтпуска(ВыбМагазин, ДатаНач, ДатаКон, Запрос);
					ВыводОтпуска(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				КонецЕсли;	
				
			КонецЕсли;
			
			Если ПереключательОсновной = "База ЗП админ" ИЛИ ПереключательОсновной = "База ЗП ст. прод" Тогда 
				
				БезВыводаВТабДок = Истина;
				Отчет(ВыбМагазин, ДатаНач, КонецДня(ДатаКон), Запрос, БезВыводаВТабДок);
				
				Если ПереключательОсновной = "База ЗП ст. прод" Тогда
					ВыводБазаЗПСтПрод(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				Иначе
					ВыводБазаЗПАдмин(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);
				КонецЕсли;
				
				ВыводДанныхГрейды(Запрос,ЭлементыФормы.ПолеТабличногоДокументаДетали);
				ВыводИтогЗПЛП(Запрос,ЭлементыФормы.ПолеТабличногоДокументаЗПЛП);
			
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;
	
	ВремяКонОтчета = ТекущаяДата();
	ВремяРасчетаОтчета = ВремяКонОтчета - ВремяНачОтчета;
	СообщитьТекст("ОТЧЕТ КОНЕЦ: "+Формат(ВремяКонОтчета,"ДЛФ=В")+Символы.Таб+Символы.Таб+Символы.Таб+Формат(ВремяРасчетаОтчета,"ЧЦ=0")+" сек. или " +Формат(ВремяРасчетаОтчета/60,"ЧДЦ=2")+" мин");	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПометкаСохранить = Ложь;
	Заголовок = "0. Расчет ЗП (полный месяц)";
	
	Если ПереключательОсновной = "ЗП ТМ" Тогда
		ЭлементыФормы.ПереключательОсновной.Доступность   = ложь;
		ЭлементыФормы.ПереключательЗПЛП.Доступность       = ложь;
		ЭлементыФормы.ПереключательСОборота.Доступность   = ложь;
		ЭлементыФормы.ПереключательЗаВыход.Доступность    = ложь;
		ЭлементыФормы.ПереключательМесПремия.Доступность  = ложь;
		ЭлементыФормы.ПереключательДопПремия.Доступность  = ложь;
		ЭлементыФормы.ПереключательПлан.Доступность       = ложь;
		ЭлементыФормы.ПереключательПоЧекам.Доступность    = ложь;
		ЭлементыФормы.ПереключательФОТ.Доступность        = ложь;
		ЭлементыФормы.ПереключательЛояльность.Доступность = ложь;
		ЭлементыФормы.ПереключательСводный.Доступность    = ложь;
	КонецЕсли;	
	
	ЗаполнитьНастройкиПоУмолчанию();
	УстановитьВидЗПЛП();
	УстановитьДоступность();
	
КонецПроцедуры



Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализацияПеременных();
	
	Если НЕ КАРМАН_ОбщийМодуль.ПравоЕстьУПользователяДополнительное(ДоступностьОтчетаПоЗП) Тогда
		Предупреждение("Нет прав на запуск отчета!");
		Отказ=Истина;
	КонецЕсли; 	
	
КонецПроцедуры

Процедура УстановитьДоступность()
	
	Если НЕ Тест Тогда
		Отладка = ПереключательОсновной;
	КонецЕсли;
	
	Если ПереключательОсновной = "База ЗП ст. прод" Тогда
		ЗПСтПрод = Истина;
	ИначеЕсли ПереключательОсновной = "База ЗП админ" Тогда	
		ЗПСтПрод = Ложь;
	КонецЕсли;
	
	ВидимостьРасчетЗП 				= РольДоступна("ПолныеПрава") ИЛИ РольДоступна("КАРМАН_РасчетЗП");
	ВидимостьРасчетЗПВсеМагазины 	= ВидимостьРасчетЗП ИЛИ КАРМАН_ОбщийМодуль.ПравоЕстьУПользователяДополнительное(ПолныйДоступКМагазинам);
	ВидимостьФОТ  					= КАРМАН_ОбщийМодуль.ПравоЕстьУПользователяДополнительное(ПолныйДоступКФОТ);
	ВидимостьЗПТМ  					= КАРМАН_ОбщийМодуль.ПравоЕстьУПользователяДополнительное(ДоступКЗПТМ);
	
	
	ВидимостьЛояльность = ПереключательОсновной = "Лояльность";
	
	ЭлементыФормы.ВидЗПЛП.Доступность 					= ВидимостьРасчетЗПВсеМагазины;
	ЭлементыФормы.БезКачелей.Доступность 				= ВидимостьРасчетЗПВсеМагазины;
	ЭлементыФормы.МесПремияПоЛП.Доступность 			= ВидимостьРасчетЗПВсеМагазины;
	ЭлементыФормы.СМБезСтавки.Доступность 				= ВидимостьРасчетЗПВсеМагазины;
	ЭлементыФормы.РМВрем.Доступность					= ВидимостьРасчетЗП;
	
	Панель.Страницы.Отладка.Видимость 					= ВидимостьРасчетЗП; 
	Панель.Страницы.Параметры.Видимость 				= ВидимостьРасчетЗП; 
	ЭлементыФормы.Тест.Видимость						= ВидимостьРасчетЗП;
	
	ЭлементыФормы.ПоВсемДолжностям.Видимость			= ВидимостьРасчетЗП;
	ЭлементыФормы.УдержаниеЗПЛП.Видимость				= ВидимостьРасчетЗП;
	ЭлементыФормы.ДляЛояльности.Видимость				= ВидимостьРасчетЗП;
		
	ЭлементыФормы.ПереключательЛояльность.Видимость 	= ВидимостьРасчетЗП;  
	ЭлементыФормы.ПереключательФОТ.Видимость			= ВидимостьРасчетЗП ИЛИ ВидимостьФОТ;
	ЭлементыФормы.ПереключательЗПТМ.Видимость			= ВидимостьРасчетЗП ИЛИ ВидимостьЗПТМ;
	ЭлементыФормы.ПереключательСводный.Видимость		= ВидимостьРасчетЗП ИЛИ ВидимостьФОТ;
	ЭлементыФормы.ПереключательПоДням.Видимость			= ВидимостьРасчетЗП ИЛИ ВидимостьФОТ;
	
	ЭлементыФормы.ПереключательБазаЗПАдмин.Видимость 	= ВидимостьРасчетЗП;  
	ЭлементыФормы.ПереключательБазаЗПСтПрод.Видимость 	= ВидимостьРасчетЗП;  
	
	Панель.Страницы.ИсторияЛояльности.Видимость = ВидимостьЛояльность; 
	
	
	УстановитьВидЗПЛП();
	
	//Если Не ВидимостьРасчетЗПВсеМагазины Тогда
	//	УстановитьВидЗПЛП();
	//КонецЕсли;
	
	
КонецПроцедуры




//Сохранение в Эксель
Процедура СохранитьОтчет()
	
	Если НЕ ЗначениеЗаполнено(Каталог) Тогда
		Предупреждение("Не заполнен каталог!",3);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
		Предупреждение("Не заполнено имя файла!",3);
		Возврат;
	КонецЕсли;
	
	КаталогНаДиске = Новый Файл(Каталог);
	Если НЕ КаталогНаДиске.Существует() Тогда
		СоздатьКаталог(Каталог);	
	КонецЕсли;	
	
	ТабДоки = Новый ТаблицаЗначений;
	ТабДоки.Колонки.Добавить("ТабДок");
	ТабДоки.Колонки.Добавить("ИмяЛиста");
	
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокумента;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить();	НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста 	= "Основная";	
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаДетали;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Детали";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаЗаВыход;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "За выход";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаЗПЛП;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "ЗП ЛП";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаСОборота;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "С оборота";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаМесПремия;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Мес. премия";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаКП;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Коллект. премия";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаКачели;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Качели";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаБонусныеДни;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Бонусные дни";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаДоплатыИУдержания;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Доплаты и удержания";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаОбщиеПродажи;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Общие продажи";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаДопМотивация;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Доп мотивация";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаПланТГ;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "План ТГ";
	КонецЕсли;
	
	ТабДок = ЭлементыФормы.ПолеТабличногоДокументаДляПеречислений;
	Если НЕ ТабДокПустой(ТабДок) Тогда
		НовСтрока = ТабДоки.Добавить(); НовСтрока.ТабДок = ТабДок; НовСтрока.ИмяЛиста	= "Для перечислений";
	КонецЕсли;
	
	
	Если ТабДоки.Количество()=0 Тогда
		Предупреждение("Нет данных для сохранения!",3);
	Иначе
		
		ПутьКФайлу = СохранитьВExcelФайл(ТабДоки);
		
		Если ПутьКФайлу <> Неопределено Тогда
			ОбработатьExcelФайл(ПутьКФайлу);
			Предупреждение("Данные успешно сохранены: "+ПутьКФайлу,3);
			ЗапуститьПриложение(ПутьКФайлу);
			
			НастройкаСохраненияОтчета();
			
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Функция ТабДокПустой(ТабДок)
	//Пустой = Ложь;
	
	Пустой = Истина;
	
	Если ТабДок <> Неопределено Тогда
		Для а = 1 по ТабДок.ВысотаТаблицы Цикл
			Ячейка = ТабДок.Область(а,1,а,1).Текст;
			Если ЗначениеЗаполнено(Ячейка) Тогда
				Пустой = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Пустой;
КонецФункции

Функция СохранитьВExcelФайл(ТабДоки)
	
	Отказ 				= Ложь;
	ИспользоватьМакросы = Ложь;
	
	ПутьКФайлу = Каталог + "\" + ИмяФайла;
	
	//Проверим есть ли уже выгруженный файл
	МассивФайлов = НайтиФайлы(Каталог,ИмяФайла);
	Если МассивФайлов.Количество()>0 Тогда
		Ответ = Вопрос("Уже есть файл с заданным именем. Заменить?", РежимДиалогаВопрос.ДаНет, 60);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПутьКФайлу) ИЛИ Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	
	Для Каждого Строка Из ТабДоки Цикл
		ПутьКФайлуТемп = КаталогВременныхФайлов() + "tmp_excel_" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd_hhmmss_") + Строка.ИмяЛиста;
		Строка.ТабДок.Записать(ПутьКФайлуТемп, ТипФайлаТабличногоДокумента.XLSX);
		Строка.ТабДок = ПутьКФайлуТемп;
	КонецЦикла;
	
	
	Excel = Новый COMОбъект("Excel.Application");
	
	Попытка
		
		Excel.DisplayAlerts = 0;
		SplitBook = Excel.WorkBooks.Add();
		ТекЛист = 1;
		Для Каждого Файл Из ТабДоки Цикл
			Book = Excel.WorkBooks.Open(Файл.ТабДок);
			Page = Book.Sheets(1);
			Page.Copy(SplitBook.Sheets(ТекЛист));
			SplitBook.Sheets(ТекЛист).Name = Файл.ИмяЛиста;
			ТекЛист = ТекЛист + 1;
			Book.Close();
		КонецЦикла;
		
		КолЛистов = SplitBook.Sheets.Count;
		Пока КолЛистов >= ТекЛист Цикл
			SplitBook.WorkSheets(КолЛистов).Delete();
			КолЛистов = КолЛистов - 1;
		КонецЦикла;
		
		SplitBook.Sheets(1).Activate();
		
		Если ИспользоватьМакросы Тогда
			МакетМакроса = ПолучитьМакет("Макрос");
			ПутьКВременномуФайлу = КаталогВременныхФайлов() + "tmp_macro_" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd_hhmmss");
			МакетМакроса.Записать(ПутьКВременномуФайлу);
			
			SplitBook.VBProject.VBComponents.Import(ПутьКВременномуФайлу);
			SplitBook.SaveAs(ПутьКФайлу, 52);
		Иначе
			SplitBook.SaveAs(ПутьКФайлу);
		КонецЕсли;
		
		SplitBook.Close();
		
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
	КонецПопытки;
	
	Excel.Quit();
	
	Если ИспользоватьМакросы Тогда
		УдалитьФайлы(ПутьКВременномуФайлу);
	КонецЕсли;
	
	Для Каждого Файл Из ТабДоки Цикл
		Попытка
			УдалитьФайлы(Файл.ТабДок);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	Возврат ПутьКФайлу;
	
	
КонецФункции

Процедура ОбработатьExcelФайл(ПутьКФайлу)
	
КонецПроцедуры


//Сохранение в Эксель интерфейсные

Процедура НастройкаСохраненияОтчета()
	
	ПометкаСохранить = НЕ ПометкаСохранить;
	
	//ЭлементыФормы.ДействияФормы.Кнопки.СохранитьОтчет.Пометка = НЕ ЭлементыФормы.ДействияФормы.Кнопки.СохранитьОтчет.Пометка;
	//ПометкаСохранить = ЭлементыФормы.ДействияФормы.Кнопки.СохранитьОтчет.Пометка;
	
	ЭлементыФормы.ПанельСохраненияОтчета.Видимость = ПометкаСохранить;
	//ЭлементыФормы.ПолеТабличногоДокумента.Видимость = НЕ ПометкаСохранить;
	
	Если ПометкаСохранить Тогда
		
		ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Страница1;  //По другому бывает, что не открывается форма настройки
		ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Основные;
		
		ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.Сохранить;
		
		Если не ЗначениеЗаполнено(Каталог) Тогда
			Каталог = РаботаСФайлами.ПолучитьИмяКаталога();
		КонецЕсли;
		
		ИмяФайла = "Расчет ЗП " + ПереключательОсновной+" " + Формат(ДатаНач, "ДФ=dd.MM.yy") + "-" + Формат(ДатаКон, "ДФ=dd.MM.yy") + " "+глЗначениеПеременной("глТекущийПользователь") + " " + Формат(ТекущаяДата(), "ДФ='dd.MM.yy'") + ".xlsx";  //"ДФ='dd.MM.yy HH-mm'"
		
	Иначе
		ЭтаФорма.Панель.ТекущаяСтраница = ЭтаФорма.Панель.Страницы.Основные;
		//ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Панель.Страницы.Основные;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура СохранитьНажатие(Элемент)
	СохранитьОтчет();
КонецПроцедуры

Процедура КаталогНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога; 
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим); 
	//ДиалогОткрытияФайла.ПолноеИмяФайла = ""; 
	//Фильтр = "Все файлы|*.*"; 
	//ДиалогОткрытияФайла.Фильтр = Фильтр; 
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь; 
	ДиалогОткрытияФайла.Заголовок = "Выберите каталог"; 
	
	Если НЕ ДиалогОткрытияФайла.Выбрать() Тогда 
		Возврат; 
	КонецЕсли;
	
	Каталог = ДиалогОткрытияФайла.Каталог; 
	
КонецПроцедуры

Процедура ЗакрытьНажатие(Элемент)
	НастройкаСохраненияОтчета();
КонецПроцедуры




//Разное


Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(Датанач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	Если НастройкаПериода.Редактировать() Тогда
		Датанач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
	УстановитьДоступность();
КонецПроцедуры



Процедура ДатаначПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

Процедура ВидЗПЛППриИзменении(Элемент)
	//	УстановитьДоступность();
КонецПроцедуры

Процедура ПоПериодамПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры


Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ПолеТабличногоДокумента1ОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ПереключательОсновнойПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура УдержаниеЗПЛППриИзменении(Элемент)
	
	Если УдержаниеЗПЛП Тогда
		Ответ = Вопрос("Установить период начиная с последнего удержания?", РежимДиалогаВопрос.ДаНет, 60);
		Если Ответ=КодВозвратаДиалога.Да Тогда
			ДатаКон = НачалоДня(ТекущаяДата())-10;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"  ВЫБРАТЬ ПЕРВЫЕ 1
			|	УдержанияСотрудников.Период КАК Период
			|ИЗ
			|	РегистрНакопления.КАРМАН_УдержанияСотрудников.Обороты(, &ДатаПо, Регистратор, СтатьяУдержания = &СтатьяУдержания) КАК УдержанияСотрудников
			|
			|УПОРЯДОЧИТЬ ПО
			|	Период УБЫВ";
			
			Запрос.УстановитьПараметр("ДатаС", НачалоМесяца(ДобавитьМесяц(ДатаКон,-1)));
			Запрос.УстановитьПараметр("ДатаПо", КонецДня(ДатаКон));
			Запрос.УстановитьПараметр("СтатьяУдержания", Справочники.КАРМАН_ВидыУпрУдержаний.НайтиПоКоду("000000191")); //Удержания ЗП ЛП по возвратам закрытого периода
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Если Выборка.Следующий() Тогда
				ДатаНач = НачалоДня(Выборка.Период);
			Иначе
				ДатаНач = НачалоМесяца(ДобавитьМесяц(ДатаКон,-1));
			КонецЕсли; 
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры



Процедура КачелиНажатие(Элемент)
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	УстановитьПараметрыЗапроса(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	
	ОтчетКачели(ВыбМагазин, ДатаНач, ДатаКон, Запрос);
	
	ВыводКачелей(Запрос,ЭлементыФормы.ПолеТабличногоДокументаКачели);
	
КонецПроцедуры

Процедура КнопкаТестНажатие(Элемент)
	
	МенеджерВТ 	= Новый МенеджерВременныхТаблиц;
	Запрос 		= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Тест(ВыбМагазин, ДатаНач, ДатаКон, Запрос);
	
КонецПроцедуры

Процедура ОтпускНажатие(Элемент)
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	УстановитьПараметрыЗапроса(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	втОбщиеЗапросы(ВыбМагазин,ДатаНач,ДатаКон,Запрос);

	ОтчетОтпуск(ВыбМагазин, ДатаНач, ДатаКон, Запрос);
	
КонецПроцедуры


Процедура БонусныеДниНажатие(Элемент)
	
	МенеджерВТ 	= Новый МенеджерВременныхТаблиц;
	Запрос 		= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	УстановитьПараметрыЗапроса(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	
	ВыводБонусныеДни(Запрос,ЭлементыФормы.ПолеТабличногоДокументаБонусныеДни);
	
КонецПроцедуры

Процедура ТестПриИзменении(Элемент)
	ЗаполнитьНастройкиПоУмолчанию();
КонецПроцедуры

Процедура ДатаНачСеткаДЧПослДокПриИзменении(Элемент)
	ДатаНачСеткаДЧПослДок = НачалоМесяца(ДатаНачСеткаДЧПослДок);
КонецПроцедуры

Процедура ПолеТабличногоДокументаПриАктивизацииОбласти(Элемент)
	
	Если Элемент=Неопределено или Элемент=0 Тогда
		Возврат;
	КонецЕсли;
	
	КолЯчеекВВыделении = 0;
	ОбщСуммаЧисло = 0;
	ОбщСумма = ПолучитьСуммуЧиселВыделеннойОбластиТабДок(ЭлементыФормы[Элемент.Имя],ОбщСуммаЧисло);
	КолЯчеекВВыделении = ПолучитьЧислоЯчеекВыделеннойОбластиТабДок(ЭлементыФормы[Элемент.Имя]);
	ОбщийТекст = "" + ОбщСумма + " (" + КолЯчеекВВыделении + " яч.)";
	Если КолЯчеекВВыделении > 1 Тогда
		ЭлементыФормы.ПанельИнфо.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельИнфо.Свертка = РежимСверткиЭлементаУправления.Низ;
	КонецЕсли;
	
	Если ОбщСуммаЧисло<>0 Тогда
		ЭлементыФормы.ИнформационнаяНадписьДляМакета.Видимость = Истина;
		ЭлементыФормы.ИнформационнаяНадписьДляМакета.Значение = ОбщийТекст;
	КонецЕсли;
	

КонецПроцедуры

Процедура КнопкаПланТГНажатие(Элемент)
	
	МенеджерВТ 	= Новый МенеджерВременныхТаблиц;
	Запрос 		= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	УстановитьПараметрыЗапроса(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	втОбщиеЗапросы(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	
	ПланТГВДеньгах(ДатаНач,ДатаКон,Запрос);

	ВыводПланТГВДеньгах(Запрос,ЭлементыФормы.ПолеТабличногоДокументаПланТГ);

КонецПроцедуры

Процедура НачисленияИУдержанияНажатие(Элемент)
	МенеджерВТ 	= Новый МенеджерВременныхТаблиц;
	Запрос 		= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	УстановитьПараметрыЗапроса(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	
	втОбщиеЗапросы(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	
	втНачисления(ВыбМагазин,ДатаКон, ДатаНач, Запрос);
	//втУдержания(ВыбМагазин,ДатаКон, ДатаНач,Запрос);
	
КонецПроцедуры

Процедура КнопкаОтправитьОтчетНаПочтуНажатие(Элемент)
	
	ПолучателиПисьма = Новый массив();
	ПолучателиПисьма.Добавить("n_maluk@5karmanov.ru");

	ОтправитьОтчетНаПочту(ПолучателиПисьма);
КонецПроцедуры


Процедура МесПремияБДПриИзменении(Элемент)
	МесПремияПоПарамРасчЗП 	= НЕ МесПремияБД;
КонецПроцедуры

Процедура МесПремияПоПарамРасчЗППриИзменении(Элемент)
	МесПремияБД	 			= НЕ МесПремияПоПарамРасчЗП;
КонецПроцедуры

Процедура ГрейдыНажатие(Элемент)
	
	МенеджерВТ 	= Новый МенеджерВременныхТаблиц;
	Запрос 		= Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	УстановитьПараметрыЗапроса(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	
	//втОбщиеЗапросы(ВыбМагазин,ДатаНач,ДатаКон,Запрос);
	втПериодыРасчета(ДатаНач,ДатаКон,Запрос);
	втКалендарь(ДатаНач,ДатаКон,Запрос);
	
	втГрейды(Запрос,ДатаНач,ДатаКон);
	
	ВыводДанныхГрейды(Запрос,ЭлементыФормы.ПолеТабличногоДокумента);

КонецПроцедуры

Процедура СМБезСтавкиПриИзменении(Элемент)
	ГарантДоход	= СМБезСтавки;
	УстановитьДоступность();
КонецПроцедуры

Процедура ЗаДеньПриИзменении(Элемент)
	Если ЗаДень Тогда
		ДатаНач = ТекущаяДата();
		ДатаКон = ТекущаяДата();
		ПереключательОсновной = "По дням";
	КонецЕсли;
КонецПроцедуры





